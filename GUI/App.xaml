<Application x:Class="GUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GUI"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ImgClose" TargetType="Border">
                <Setter Property="Width" Value="24" />
                <Setter Property="Height" Value="24" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Margin" Value="0 13 13 0" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">

                    </Trigger>
                    <Trigger Property="IsMouseCaptured" Value="True">

                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ImgMinimize" TargetType="Border">
                <Setter Property="Width" Value="24" />
                <Setter Property="Height" Value="24" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Margin" Value="0 13 37 0" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">

                    </Trigger>
                    <Trigger Property="IsMouseCaptured" Value="True">

                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Label">
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="18" />
            </Style>

            <Style x:Key="NormalText" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="18" />
            </Style>

            <Style x:Key="NormalTextBox" TargetType="TextBox">
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="18" />
            </Style>

            <Style x:Key="SubTextBox" TargetType="TextBox">
                <Setter Property="Foreground" Value="#8b8c99"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <Style x:Key="SubText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>

            <!-- chỗ này là mấy cái màu status -->
            <Style x:Key="StatusStyle" TargetType="Border">
                <Setter Property="Background" Value="Transparent"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Status}" Value="InProgress">
                        <Setter Property="Background"  Value="#c1ce8e"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Status}" Value="Completed">
                        <Setter Property="Background" Value="#8eb4c0" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Status}" Value="Waiting">
                        <Setter Property="Background" Value="#9b9b9b" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            

            <Style x:Key="SideBarButton" TargetType="Button">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" BlurRadius="8" ShadowDepth="4" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="10" Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect Color="Black" BlurRadius="15" ShadowDepth="6" Opacity="0.5"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>



            <Style x:Key="BorderTasksContainer" TargetType="Border">
                <Setter Property="Background" Value="#fff" />
                <Setter Property="CornerRadius" Value="5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#e6e8ea" />
                <Setter Property="Padding" Value="4" />
            </Style>

            <Style x:Key="ActionButton" TargetType="Button">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Background" Value="#F7E1D7" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="4 4" />
                <Setter Property="Width" Value="80" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="4" Padding="4" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Background" Value="#BCF8EC"/>
                <Setter Property="BorderBrush" Value="#ccc"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Border 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="6">
                                    <Grid>
                                        <ContentPresenter 
                                Margin="6,0,30,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Content="{TemplateBinding SelectionBoxItem}" 
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                IsHitTestVisible="False"/>
                                        <ToggleButton 
                                Grid.Column="1"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"
                                Background="Transparent"
                                BorderThickness="0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Width="16"
                                Height="16"
                                Margin="0,0,0,0">
                                            <Path 
                                    Data="M 0 0 L 4 4 L 8 0 Z" 
                                    Fill="Black" 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                                        </ToggleButton>
                                    </Grid>
                                </Border>

                                <Popup 
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True"
                        Focusable="False"
                        PopupAnimation="Slide">
                                    <Border 
                            Background="White" 
                            BorderBrush="#ccc" 
                            BorderThickness="1"
                            CornerRadius="4"
                            Margin="0,2,0,0">
                                        <ScrollViewer>
                                            <StackPanel IsItemsHost="True" />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="MenuItem">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border x:Name="Border" 
                        Background="{TemplateBinding Background}" 
                        Padding="{TemplateBinding Padding}" 
                        CornerRadius="8" 
                                SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter ContentSource="Icon" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,8,0"/>
                                    <ContentPresenter ContentSource="Header" Grid.Column="1" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="#89c4fb"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
